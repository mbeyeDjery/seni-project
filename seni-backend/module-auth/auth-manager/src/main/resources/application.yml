spring:
  application:
    name: auth-manager
  profiles:
    active: dev
  jpa:
    database: POSTGRESQL
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5454}/${POSTGRES_BD:senibd}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PWD:postgres}
    driverClassName: org.postgresql.Driver
  sql:
    init:
      platform: postgres
  security:
    oauth2:
      resource server:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER:http://localhost:1200/realms/seni_manager}
          jwk-set-uri: ${JWT_SET_URI:http://localhost:1200/realms/seni_manager/protocol/openid-connect/certs}
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_HOST:http://localhost:8761/eureka/}
server:
  port: ${random.int(6700,6750)}
seni-app:
  keycloak:
    realm: ${KEYCLOAK_REALM:seni_manager}
    clientId: ${KEYCLOAK_CLIENT:auth_manager}
    host: ${KEYCLOAK_HOST:http://localhost:1200}
    clientSecret: ${KEYCLOAK_SECRET:o7HwXB6oQIYB8IEXA9AgTWjWwls6isqG}
    authBaseUrl: ${KEYCLOAK_AUTH_URL:http://localhost:1200/realms/seni_manager/protocol/openid-connect}